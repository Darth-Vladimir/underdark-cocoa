// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

// @@protoc_insertion_point(imports)

@class Command;
@class CommandBuilder;
@class HelloCommand;
@class HelloCommandBuilder;
@class SignalCommand;
@class SignalCommandBuilder;


typedef NS_ENUM(SInt32, CommandCommandType) {
  CommandCommandTypeHello = 1,
  CommandCommandTypeSignal = 2,
};

BOOL CommandCommandTypeIsValidValue(CommandCommandType value);
NSString *NSStringFromCommandCommandType(CommandCommandType value);


@interface CommandsRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

#define Command_type @"type"
#define Command_hello @"hello"
#define Command_signal @"signal"
@interface Command : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasHello_:1;
  BOOL hasSignal_:1;
  BOOL hasType_:1;
  HelloCommand* hello;
  SignalCommand* signal;
  CommandCommandType type;
}
- (BOOL) hasType;
- (BOOL) hasHello;
- (BOOL) hasSignal;
@property (readonly) CommandCommandType type;
@property (readonly, strong) HelloCommand* hello;
@property (readonly, strong) SignalCommand* signal;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CommandBuilder*) builder;
+ (CommandBuilder*) builder;
+ (CommandBuilder*) builderWithPrototype:(Command*) prototype;
- (CommandBuilder*) toBuilder;

+ (Command*) parseFromData:(NSData*) data;
+ (Command*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Command*) parseFromInputStream:(NSInputStream*) input;
+ (Command*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Command*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Command*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CommandBuilder : PBGeneratedMessageBuilder {
@private
  Command* resultCommand;
}

- (Command*) defaultInstance;

- (CommandBuilder*) clear;
- (CommandBuilder*) clone;

- (Command*) build;
- (Command*) buildPartial;

- (CommandBuilder*) mergeFrom:(Command*) other;
- (CommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasType;
- (CommandCommandType) type;
- (CommandBuilder*) setType:(CommandCommandType) value;
- (CommandBuilder*) clearType;

- (BOOL) hasHello;
- (HelloCommand*) hello;
- (CommandBuilder*) setHello:(HelloCommand*) value;
- (CommandBuilder*) setHelloBuilder:(HelloCommandBuilder*) builderForValue;
- (CommandBuilder*) mergeHello:(HelloCommand*) value;
- (CommandBuilder*) clearHello;

- (BOOL) hasSignal;
- (SignalCommand*) signal;
- (CommandBuilder*) setSignal:(SignalCommand*) value;
- (CommandBuilder*) setSignalBuilder:(SignalCommandBuilder*) builderForValue;
- (CommandBuilder*) mergeSignal:(SignalCommand*) value;
- (CommandBuilder*) clearSignal;
@end

#define HelloCommand_version @"version"
#define HelloCommand_nodeId @"nodeId"
#define HelloCommand_latitude @"latitude"
#define HelloCommand_longitude @"longitude"
@interface HelloCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasLatitude_:1;
  BOOL hasLongitude_:1;
  BOOL hasNodeId_:1;
  BOOL hasVersion_:1;
  Float64 latitude;
  Float64 longitude;
  SInt64 nodeId;
  SInt32 version;
}
- (BOOL) hasVersion;
- (BOOL) hasNodeId;
- (BOOL) hasLatitude;
- (BOOL) hasLongitude;
@property (readonly) SInt32 version;
@property (readonly) SInt64 nodeId;
@property (readonly) Float64 latitude;
@property (readonly) Float64 longitude;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (HelloCommandBuilder*) builder;
+ (HelloCommandBuilder*) builder;
+ (HelloCommandBuilder*) builderWithPrototype:(HelloCommand*) prototype;
- (HelloCommandBuilder*) toBuilder;

+ (HelloCommand*) parseFromData:(NSData*) data;
+ (HelloCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (HelloCommand*) parseFromInputStream:(NSInputStream*) input;
+ (HelloCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (HelloCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (HelloCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface HelloCommandBuilder : PBGeneratedMessageBuilder {
@private
  HelloCommand* resultHelloCommand;
}

- (HelloCommand*) defaultInstance;

- (HelloCommandBuilder*) clear;
- (HelloCommandBuilder*) clone;

- (HelloCommand*) build;
- (HelloCommand*) buildPartial;

- (HelloCommandBuilder*) mergeFrom:(HelloCommand*) other;
- (HelloCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (HelloCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasVersion;
- (SInt32) version;
- (HelloCommandBuilder*) setVersion:(SInt32) value;
- (HelloCommandBuilder*) clearVersion;

- (BOOL) hasNodeId;
- (SInt64) nodeId;
- (HelloCommandBuilder*) setNodeId:(SInt64) value;
- (HelloCommandBuilder*) clearNodeId;

- (BOOL) hasLatitude;
- (Float64) latitude;
- (HelloCommandBuilder*) setLatitude:(Float64) value;
- (HelloCommandBuilder*) clearLatitude;

- (BOOL) hasLongitude;
- (Float64) longitude;
- (HelloCommandBuilder*) setLongitude:(Float64) value;
- (HelloCommandBuilder*) clearLongitude;
@end

#define SignalCommand_nodeId @"nodeId"
#define SignalCommand_data @"data"
@interface SignalCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasNodeId_:1;
  BOOL hasData_:1;
  SInt64 nodeId;
  NSData* data;
}
- (BOOL) hasNodeId;
- (BOOL) hasData;
@property (readonly) SInt64 nodeId;
@property (readonly, strong) NSData* data;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SignalCommandBuilder*) builder;
+ (SignalCommandBuilder*) builder;
+ (SignalCommandBuilder*) builderWithPrototype:(SignalCommand*) prototype;
- (SignalCommandBuilder*) toBuilder;

+ (SignalCommand*) parseFromData:(NSData*) data;
+ (SignalCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SignalCommand*) parseFromInputStream:(NSInputStream*) input;
+ (SignalCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SignalCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SignalCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SignalCommandBuilder : PBGeneratedMessageBuilder {
@private
  SignalCommand* resultSignalCommand;
}

- (SignalCommand*) defaultInstance;

- (SignalCommandBuilder*) clear;
- (SignalCommandBuilder*) clone;

- (SignalCommand*) build;
- (SignalCommand*) buildPartial;

- (SignalCommandBuilder*) mergeFrom:(SignalCommand*) other;
- (SignalCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SignalCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasNodeId;
- (SInt64) nodeId;
- (SignalCommandBuilder*) setNodeId:(SInt64) value;
- (SignalCommandBuilder*) clearNodeId;

- (BOOL) hasData;
- (NSData*) data;
- (SignalCommandBuilder*) setData:(NSData*) value;
- (SignalCommandBuilder*) clearData;
@end


// @@protoc_insertion_point(global_scope)
